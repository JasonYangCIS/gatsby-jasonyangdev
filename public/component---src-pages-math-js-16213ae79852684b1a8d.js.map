{"version":3,"sources":["webpack:///./src/components/text/text.js","webpack:///./src/components/v2/layout/layoutMath.js","webpack:///./src/components/equations/equationCard.js","webpack:///./src/components/equations/score.js","webpack:///./src/components/timer/timer.js","webpack:///./src/components/equations/equations.js","webpack:///./src/components/v2/ComponentRenderer/ComponentRenderer.js","webpack:///./src/pages/math.js"],"names":["StyledTextContainer","styled","div","colors","mdGrey","Text","render","this","props","type","className","children","safeType","toLowerCase","TextEle","includes","dangerouslySetInnerHTML","__html","React","Component","defaultProps","data","StyledMain","main","white","Layout","StyledFieldset","fieldset","offWhite","danger","success","EquationCard","state","answered","answer","correct","valueOne","getRandomInt","valueTwo","componentDidMount","setAnswer","min","Math","ceil","rangeMin","max","floor","rangeMax","random","getOperator","operation","getAnswer","x","y","setState","parseInt","checkAnswer","isCorrect","onChange","onFocus","timer","timerDuration","handleClickTimer","setAnswered","input","value","length","onBlur","fieldSetClass","htmlFor","index","id","ref","disabled","StyledDiv","Score","span","quantity","StyledForm","form","Timer","onClick","bind","timerText","StyledHr","hr","Equations","started","duration","window","location","reload","timerId","setInterval","decrementedState","stopTimer","clearInterval","equationCard","cardBuilder","i","push","key","ComponentRenderer","componentData","htmlElement","content","MathPage","dataJson","components","map","component","query"],"mappings":"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","file":"component---src-pages-math-js-16213ae79852684b1a8d.js","sourcesContent":["import PropTypes from \"prop-types\";\nimport React from \"react\";\nimport styled from \"styled-components\";\nimport colors from \"../_colors\";\n\nconst StyledTextContainer = styled.div`\n  h1,\n  h2,\n  h3,\n  h4,\n  h5,\n  h6 {\n    color: ${colors.mdGrey};\n    font-weight: 400;\n    display: block;\n  }\n  p {\n    color: ${colors.mdGrey};\n    font-size: 0.9rem;\n  }\n`;\n\nclass Text extends React.Component {\n  render() {\n    const { type, className, children } = this.props;\n    const validTypes = [\"h1\", \"h2\", \"h3\", \"h4\", \"h5\", \"h6\", \"p\"];\n\n    const safeType = type ? type.toLowerCase() : \"\";\n    const TextEle = validTypes.includes(safeType) ? safeType : \"p\";\n\n    return (\n      <StyledTextContainer className={className}>\n        <TextEle dangerouslySetInnerHTML={{ __html: children }} />\n      </StyledTextContainer>\n    );\n  }\n}\n\nexport default Text;\n\nText.propTypes = {\n  data: PropTypes.string,\n};\n\nText.defaultProps = {\n  data: ``,\n};\n","/**\n * Layout component that queries for data\n * with Gatsby's useStaticQuery component\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport styled from \"styled-components\";\nimport colors from \"../../_colors\";\n\nconst StyledMain = styled.main`\n  background: ${colors.white};\n  width: 100%;\n  display: block;\n  padding: 20px;\n  max-width: 1100px;\n  margin: 40px auto;\n`;\n\nclass Layout extends React.Component {\n  render() {\n    return (\n      <>\n        <StyledMain>{this.props.children}</StyledMain>\n      </>\n    );\n  }\n}\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n};\n\nexport default Layout;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\nimport colors from \"../../components/_colors\";\n\nconst StyledFieldset = styled.fieldset`\n  display: inline-block;\n  color: ${colors.mdGrey};\n  margin: 20px 10px 0;\n  border: 0;\n  width: 80px;\n  position: relative;\n  border: 2px solid ${colors.offWhite};\n  padding: 5px;\n  box-shadow: 0 3px 6px rgba(0, 0, 0, 0.05);\n  &.equation {\n    &--incorrect input {\n      background: ${colors.danger};\n    }\n    &--correct input {\n      background: ${colors.success};\n    }\n  }\n  label,\n  span.equation__value {\n    width: 100%;\n    display: inline-block;\n    text-align: right;\n  }\n  input {\n    border: 0;\n    border-top: 1px solid ${colors.mdGrey};\n    width: 100%;\n    height: 30px;\n    display: inline-block;\n    text-align: right;\n  }\n  .equation__operator {\n    position: absolute;\n    bottom: 32px;\n    left: 5px;\n    z-index: 1;\n    font-size: 18px;\n    font-family: arial, sans-serif;\n  }\n`;\n\nclass EquationCard extends React.Component {\n  static propTypes = {\n    key: PropTypes.string.isRequired,\n    index: PropTypes.number.isRequired,\n    rangeMin: PropTypes.number.isRequired,\n    rangeMax: PropTypes.number.isRequired,\n    operation: PropTypes.string.isRequired,\n    handleClickTimer: PropTypes.number.isRequired,\n    timer: PropTypes.func.isRequired,\n    timerDuration: PropTypes.number.isRequired,\n  };\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      answered: false,\n      answer: null,\n      correct: null,\n      valueOne: this.getRandomInt(),\n      valueTwo: this.getRandomInt(),\n    };\n  }\n\n  componentDidMount() {\n    this.setAnswer();\n  }\n\n  getRandomInt() {\n    let min = Math.ceil(this.props.rangeMin);\n    let max = Math.floor(this.props.rangeMax);\n    return Math.floor(Math.random() * (max - min) + min); //The maximum is exclusive and the minimum is inclusive\n  }\n\n  getOperator() {\n    switch (this.props.operation) {\n      case \"multiplication\":\n        return \"x\";\n      case \"subtraction\":\n        return \"-\";\n      case \"addition\":\n        return \"+\";\n      case \"division\":\n        return \"÷\";\n      default:\n        return \"*\";\n    }\n  }\n\n  getAnswer(x, y) {\n    switch (this.props.operation) {\n      case \"multiplication\":\n        return x * y;\n      case \"subtraction\":\n        return x - y;\n      case \"addition\":\n        return x + y;\n      case \"division\":\n        return x / y;\n      default:\n        return x * y;\n    }\n  }\n\n  setAnswer() {\n    this.setState({\n      answer: parseInt(\n        this.getAnswer(this.state.valueOne, this.state.valueTwo)\n      ),\n    });\n  }\n\n  checkAnswer(answer) {\n    let isCorrect = true;\n\n    if (answer !== this.state.answer) {\n      isCorrect = false;\n    }\n\n    this.setState({\n      correct: isCorrect,\n    });\n  }\n\n  onChange() {\n    // if answer is correct, change focus to next item\n    // if on last item, submit the form\n  }\n\n  onFocus() {\n    // start timer as soon as user enters the input field\n    if (this.props.timer === this.props.timerDuration) {\n      this.props.handleClickTimer();\n    }\n  }\n\n  setAnswered() {\n    if (this.input.value.length > 0) {\n      this.setState({\n        answered: true,\n      });\n    }\n  }\n\n  onBlur() {\n    this.setAnswered();\n    this.checkAnswer(parseInt(this.input.value));\n  }\n\n  render() {\n    let fieldSetClass = \"\";\n    if (this.state.answered && this.state.correct) {\n      fieldSetClass = \"equation--correct\";\n    } else if (this.state.answered || this.props.timer === 0) {\n      fieldSetClass = \"equation--incorrect\";\n    }\n\n    return (\n      <StyledFieldset className={fieldSetClass}>\n        <label htmlFor={`equation_card_${this.props.index}`}>\n          <span className=\"equation__value\">{this.state.valueOne}</span>\n          <span className=\"equation__value\">{this.state.valueTwo}</span>\n          <span className=\"equation__operator\">{this.getOperator()}</span>\n          <input\n            id={`equation_card_${this.props.index}`}\n            type=\"number\"\n            ref={input => (this.input = input)}\n            onChange={() => this.onChange()}\n            onBlur={() => this.onBlur()}\n            onFocus={() => this.onFocus()}\n            disabled={this.state.answered || this.props.timer === 0}\n          />\n        </label>\n      </StyledFieldset>\n    );\n  }\n}\n\nexport default EquationCard;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\n\nconst StyledDiv = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n  width: 100%;\n  margin-bottom: 20px;\n`;\n\nclass Score extends React.Component {\n  static propTypes = {\n    quantity: PropTypes.number.isRequired,\n  };\n\n  render() {\n    return (\n      <StyledDiv>\n        <span ref={span => (this.span = span)}>0</span> / {this.props.quantity}\n      </StyledDiv>\n    );\n  }\n}\n\nexport default Score;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\n\nconst StyledForm = styled.form`\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n  width: 100%;\n  margin-bottom: 0;\n  input,\n  label {\n    display: block;\n    text-align: center;\n    margin: 0 auto;\n  }\n  label {\n    margin-bottom: 20px;\n  }\n`;\n\nclass Timer extends React.Component {\n  static propTypes = {\n    handleClickTimer: PropTypes.func.isRequired,\n    timer: PropTypes.number.isRequired,\n    timerText: PropTypes.string.isRequired,\n  };\n\n  render() {\n    return (\n      <StyledForm>\n        <label htmlFor=\"timer\">\n          <span ref={span => (this.span = span)}>{this.props.timer}</span>{\" \"}\n          Seconds\n          <input\n            id=\"timer\"\n            type=\"button\"\n            ref={input => (this.input = input)}\n            onClick={this.props.handleClickTimer.bind(this)}\n            value={this.props.timerText}\n          />\n        </label>\n      </StyledForm>\n    );\n  }\n}\n\nexport default Timer;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport EquationCard from \"./equationCard\";\nimport Score from \"./score\";\nimport Timer from \"../timer/timer\";\nimport styled from \"styled-components\";\n\nconst StyledForm = styled.form`\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n  width: 100%;\n  &.equation__card--inactive {\n    span.equation__value {\n      opacity: 0;\n    }\n  }\n`;\nconst StyledHr = styled.hr`\n  margin: 40px 0;\n`;\n\nclass Equations extends React.Component {\n  static propTypes = {\n    rangeMin: PropTypes.number.isRequired,\n    rangeMax: PropTypes.number.isRequired,\n    operation: PropTypes.string.isRequired,\n    quantity: PropTypes.number.isRequired,\n    timerDuration: PropTypes.number.isRequired,\n  };\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      started: false,\n      duration: this.props.timerDuration,\n      timerText: \"Start Timer\",\n    };\n  }\n\n  handleClickTimer() {\n    // handle reset button click\n    if (this.state.started === true) {\n      window.location.reload();\n    }\n\n    this.setState({\n      started: true,\n    });\n\n    this.timerId = setInterval(() => {\n      let decrementedState = this.state.duration - 1;\n      this.setState({\n        duration: decrementedState,\n        timerText: \"Reset\",\n      });\n      if (this.state.duration === 0) this.stopTimer();\n    }, 1000);\n  }\n\n  stopTimer() {\n    clearInterval(this.timerId);\n  }\n\n  equationCard() {\n    let cardBuilder = [];\n    for (var i = 0; i < this.props.quantity; i++) {\n      cardBuilder.push(\n        <EquationCard\n          key={`${this.props.operation}-${i}`}\n          index={i}\n          rangeMin={this.props.rangeMin}\n          rangeMax={this.props.rangeMax}\n          operation={this.props.operation}\n          handleClickTimer={this.handleClickTimer.bind(this)}\n          timer={this.state.duration}\n          timerDuration={this.state.timerDuration}\n        />\n      );\n    }\n\n    return (\n      <>\n        <StyledForm\n          className={`equation__card ${\n            this.state.duration === this.props.timerDuration\n              ? \" equation__card--inactive\"\n              : \"\"\n          }`}\n        >\n          {cardBuilder}\n        </StyledForm>\n      </>\n    );\n  }\n\n  render() {\n    return (\n      <>\n        <StyledHr />\n        <Timer\n          handleClickTimer={this.handleClickTimer.bind(this)}\n          timer={this.state.duration}\n          timerText={this.state.timerText}\n        />\n        <Score quantity={this.props.quantity} />\n        {this.equationCard()}\n        <StyledHr />\n      </>\n    );\n  }\n}\n\nexport default Equations;\n","import React from \"react\";\nimport Text from \"../../text/text\";\nimport Equations from \"../../equations/equations\";\n\nclass ComponentRenderer extends React.Component {\n  constructor(props) {\n    super(props);\n    this.componentData = this.props.data;\n  }\n\n  render() {\n    switch (this.componentData.type) {\n      case \"text\":\n        return (\n          <Text type={this.componentData.htmlElement}>\n            {this.componentData.content}\n          </Text>\n        );\n      case \"equations\":\n        return (\n          <Equations\n            rangeMin={this.componentData.rangeMin}\n            rangeMax={this.componentData.rangeMax}\n            operation={this.componentData.operation}\n            quantity={this.componentData.quantity}\n            timerDuration={this.componentData.timerDuration}\n          />\n        );\n      default:\n        return null;\n    }\n  }\n}\n\nexport default ComponentRenderer;\n","import React from \"react\";\nimport Layout from \"../components/v2/layout/layoutMath\";\nimport ComponentRenderer from \"../components/v2/ComponentRenderer/ComponentRenderer\";\n\nclass MathPage extends React.Component {\n  constructor(props) {\n    super(props);\n    this.data = this.props.data;\n  }\n\n  render() {\n    return (\n      <Layout>\n        {this.data.dataJson.components.map((component, index) => (\n          <ComponentRenderer\n            data={component}\n            key={`${component.type}_${index}`}\n          />\n        ))}\n      </Layout>\n    );\n  }\n}\n\nexport default MathPage;\n\nexport const query = graphql`\n  query Math {\n    dataJson {\n      template\n      components {\n        type\n        content\n        htmlElement\n        rangeMin\n        rangeMax\n        operation\n        quantity\n        timerDuration\n      }\n    }\n  }\n`;\n"],"sourceRoot":""}